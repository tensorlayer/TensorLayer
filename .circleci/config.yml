version: 2

jobs:

  build_pypi_py2_cpu:
    working_directory: ~/build
    docker:
      - image: docker:git
    steps:
      - setup_remote_docker:
          reusable: true
          exclusive: true

      - run:
          name: Build Docker Image Python 2 CPU from PYPI
          command: |
            cd docker

            apk add --update py-pip

            python -m pip install --upgrade pip
            pip install --upgrade requests

            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

            TL_VERSION="$(python pypi_list.py --package tensorlayer --nth_last_version 1)"
            echo TL_VERSION="$TL_VERSION"

            docker build -t latest_py2_cpu python2/cpu --build-arg TL_VERSION="$TL_VERSION"

            # ============== Latest Python2 CPU Containers ==============

            CONTAINER_TAG=latest
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            CONTAINER_TAG=latest-cpu
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            CONTAINER_TAG=latest-cpu-py2
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            # ============== Tag Python2 CPU Containers ==============

            CONTAINER_TAG="$TL_VERSION"
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            CONTAINER_TAG="$TL_VERSION"-cpu
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            CONTAINER_TAG="$TL_VERSION"-cpu-py2
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

  build_pypi_py2_gpu:
    working_directory: ~/build
    docker:
      - image: docker:git
    steps:
      - setup_remote_docker:
          reusable: true
          exclusive: true

      - run:
          name: Build Docker Image Python 2 GPU from PYPI
          command: |
            cd docker

            apk add --update py-pip

            python -m pip install --upgrade pip
            pip install --upgrade requests

            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

            TL_VERSION="$(python pypi_list.py --package tensorlayer --nth_last_version 1)"
            echo TL_VERSION="$TL_VERSION"

            docker build -t latest_py2_gpu python2/gpu --build-arg TL_VERSION="$TL_VERSION"

            # ============== Latest Python2 GPU Containers ==============

            CONTAINER_TAG=latest-gpu
            docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            CONTAINER_TAG=latest-gpu-py2
            docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            # ============== Tag Python2 GPU Containers ==============

            CONTAINER_TAG="$TL_VERSION"-gpu
            docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            CONTAINER_TAG="$TL_VERSION"-gpu-py2
            docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

  build_pypi_py3_cpu:
    working_directory: ~/build
    docker:
      - image: docker:git
    steps:
      - setup_remote_docker:
          reusable: true
          exclusive: true

      - run:
          name: Build Docker Image Python 3 CPU from PYPI
          command: |
            cd docker

            apk add --update py-pip

            python -m pip install --upgrade pip
            pip install --upgrade requests

            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

            TL_VERSION="$(python pypi_list.py --package tensorlayer --nth_last_version 1)"
            echo TL_VERSION="$TL_VERSION"

            docker build -t latest_py3_cpu python3/cpu --build-arg TL_VERSION="$TL_VERSION"

            # ============== Latest Python3 CPU Containers ==============

            CONTAINER_TAG=latest-py3
            docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            CONTAINER_TAG=latest-cpu-py3
            docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            # ============== Tag Python3 CPU Containers ==============

            CONTAINER_TAG="$TL_VERSION"-py3
            docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            CONTAINER_TAG="$TL_VERSION"-cpu-py3
            docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"


  build_pypi_py3_gpu:
    working_directory: ~/build
    docker:
      - image: docker:git
    steps:
      - setup_remote_docker:
          reusable: true
          exclusive: true

      - run:
          name: Build Docker Image Python 3 GPU from PYPI
          command: |
            cd docker

            apk add --update py-pip

            python -m pip install --upgrade pip
            pip install --upgrade requests

            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

            TL_VERSION="$(python pypi_list.py --package tensorlayer --nth_last_version 1)"
            echo TL_VERSION="$TL_VERSION"

            docker build -t latest_py3_gpu python3/gpu --build-arg TL_VERSION="$TL_VERSION"

            # ============== Latest Python3 GPU Containers ==============

            CONTAINER_TAG=latest-gpu-py3
            docker tag latest_py3_gpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"

            # ============== Tag Python3 GPU Containers ==============

            CONTAINER_TAG="$TL_VERSION"-gpu-py3
            docker tag latest_py3_gpu:latest tensorlayer/tensorlayer:"$CONTAINER_TAG"
            docker push tensorlayer/tensorlayer:"$CONTAINER_TAG"


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_pypi_py2_cpu:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /.*/

      - build_pypi_py2_gpu:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /.*/

      - build_pypi_py3_cpu:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /.*/

      - build_pypi_py3_gpu:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /.*/


#      - build_pypi_py2_cpu:
#          filters:
#            tags:
#              only: /.*/
#            branches:
#              ignore: /.*/

#      - build_pypi_py2_gpu:
#          filters:
#            tags:
#              only: /.*/
#            branches:
#              ignore: /.*/

#      - build_pypi_py3_cpu:
#          filters:
#            tags:
#              only: /.*/
#            branches:
#              ignore: /.*/

#      - build_pypi_py3_gpu:
#          filters:
#            tags:
#              only: /.*/
#            branches:
#              ignore: /.*/


#if [[ ! -z $CIRCLE_PULL_REQUEST ]] ;
#if [[ ! -z $CIRCLE_TAG ]] ;
#if [[ ! -z $CIRCLE_BRANCH && $CIRCLE_BRANCH == 'master']] ;
#then
#  ...
#else
#  echo "Not a release, skipping build"
#fi
