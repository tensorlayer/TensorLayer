version: 2
jobs:
  build:
    working_directory: ~/build
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker:
          reusable: true
          exclusive: true

      - run:
          name: Connect to Docker Hub
          command: |
            if [ ! -z $CIRCLE_TAG ] || { [ ! -z $CIRCLE_BRANCH ] && [ $CIRCLE_BRANCH == 'master' ]; };
            then
              cd docker

              apk add --update py-pip

              python -m pip install --upgrade pip
              pip install --upgrade requests

              echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

              TL_VERSION="$(python pypi_list.py --package tensorlayer --nth_last_version 1)"
              TF_VERSION="$(python pypi_list.py --package tensorflow --nth_last_version 1)"
            else
              echo "Not a Release nor a Commit on Master, skipping build"
            fi

      - run:
          name: Build Release Containers
          command: |

            if [[ ! -z $CIRCLE_TAG ]] ;
            then
              docker build -t latest_py2_cpu python2/cpu --build-arg TL_VERSION=$TL_VERSION
              docker build -t latest_py2_gpu python2/gpu --build-arg TL_VERSION=$TL_VERSION
              docker build -t latest_py3_cpu python3/cpu --build-arg TL_VERSION=$TL_VERSION
              docker build -t latest_py3_gpu python3/gpu --build-arg TL_VERSION=$TL_VERSION
            else
              echo "Not a Release, skipping build"
            fi

      - run:
          name: Deploy Release Containers
          command: |

            if [[ ! -z $CIRCLE_TAG ]] ;
            then
              # ============== Python2 CPU Container ==============

              CONTAINER_TAG=latest
              docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG=latest-cpu
              docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG=latest-cpu-py2
              docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG="$TL_VERSION"
              docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG="$TL_VERSION"-cpu
              docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG="$TL_VERSION"-cpu-py2
              docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG


              # ============== Python2 GPU Container ==============

              CONTAINER_TAG=latest-gpu
              docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG=latest-gpu-py2
              docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG="$TL_VERSION"-gpu
              docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG="$TL_VERSION"-gpu-py2
              docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG


              # ============== Python3 CPU Container ==============

              CONTAINER_TAG=latest-py3
              docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG=latest-cpu-py3
              docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG="$TL_VERSION"-cpu-py3
              docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG


              # ============== Python3 GPU Container ==============

              CONTAINER_TAG=latest-gpu-py3
              docker tag latest_py3_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

              CONTAINER_TAG="$TL_VERSION"-gpu-py3
              docker tag latest_py3_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
              docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            else
              echo "Not a Release, skipping build"
            fi

      - run:
          name: TEST - Connect to Docker Hub
          command: |
            cd docker

            apk add --update py-pip

            python -m pip install --upgrade pip
            pip install --upgrade requests

            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

            TL_VERSION="$(python pypi_list.py --package tensorlayer --nth_last_version 1)"
            echo TL_VERSION="$TL_VERSION"

            #TF_VERSION="$(python pypi_list.py --package tensorflow --nth_last_version 1)"
            #echo TF_VERSION="$TF_VERSION"

      - run:
          name: TEST - Build Release Containers
          command: |
            docker build -t latest_py2_cpu docker/python2/cpu --build-arg TL_VERSION=$TL_VERSION
            docker build -t latest_py2_gpu docker/python2/gpu --build-arg TL_VERSION=$TL_VERSION
            docker build -t latest_py3_cpu docker/python3/cpu --build-arg TL_VERSION=$TL_VERSION
            docker build -t latest_py3_gpu docker/python3/gpu --build-arg TL_VERSION=$TL_VERSION

      - run:
          name: TEST - Deploy Release Containers
          command: |

            # ============== Python2 CPU Container ==============

            CONTAINER_TAG=latest
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG=latest-cpu
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG=latest-cpu-py2
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG="$TL_VERSION"
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG="$TL_VERSION"-cpu
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG="$TL_VERSION"-cpu-py2
            docker tag latest_py2_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG


            # ============== Python2 GPU Container ==============

            CONTAINER_TAG=latest-gpu
            docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG=latest-gpu-py2
            docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG="$TL_VERSION"-gpu
            docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG="$TL_VERSION"-gpu-py2
            docker tag latest_py2_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG


            # ============== Python3 CPU Container ==============

            CONTAINER_TAG=latest-py3
            docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG=latest-cpu-py3
            docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG="$TL_VERSION"-cpu-py3
            docker tag latest_py3_cpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG


            # ============== Python3 GPU Container ==============

            CONTAINER_TAG=latest-gpu-py3
            docker tag latest_py3_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

            CONTAINER_TAG="$TL_VERSION"-gpu-py3
            docker tag latest_py3_gpu:latest tensorlayer/tensorlayer:$CONTAINER_TAG
            docker push tensorlayer/tensorlayer:$CONTAINER_TAG

#if [[ ! -z $CIRCLE_PULL_REQUEST ]] ;
#if [[ ! -z $CIRCLE_TAG ]] ;
#if [[ ! -z $CIRCLE_BRANCH && $CIRCLE_BRANCH == 'master']] ;
#then
#  ...
#else
#  echo "Not a release, skipping build"
#fi
